// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class SummarySaved extends ethereum.Event {
  get params(): SummarySaved__Params {
    return new SummarySaved__Params(this);
  }
}

export class SummarySaved__Params {
  _event: SummarySaved;

  constructor(event: SummarySaved) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get id(): string {
    return this._event.parameters[1].value.toString();
  }

  get title(): string {
    return this._event.parameters[2].value.toString();
  }

  get timestamp(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class SummaryVault extends ethereum.SmartContract {
  static bind(address: Address): SummaryVault {
    return new SummaryVault("SummaryVault", address);
  }

  getSummary(id: string): string {
    let result = super.call("getSummary", "getSummary(string):(string)", [
      ethereum.Value.fromString(id)
    ]);

    return result[0].toString();
  }

  try_getSummary(id: string): ethereum.CallResult<string> {
    let result = super.tryCall("getSummary", "getSummary(string):(string)", [
      ethereum.Value.fromString(id)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }
}

export class SaveSummaryCall extends ethereum.Call {
  get inputs(): SaveSummaryCall__Inputs {
    return new SaveSummaryCall__Inputs(this);
  }

  get outputs(): SaveSummaryCall__Outputs {
    return new SaveSummaryCall__Outputs(this);
  }
}

export class SaveSummaryCall__Inputs {
  _call: SaveSummaryCall;

  constructor(call: SaveSummaryCall) {
    this._call = call;
  }

  get id(): string {
    return this._call.inputValues[0].value.toString();
  }

  get content(): string {
    return this._call.inputValues[1].value.toString();
  }

  get title(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class SaveSummaryCall__Outputs {
  _call: SaveSummaryCall;

  constructor(call: SaveSummaryCall) {
    this._call = call;
  }
}
